services:
  api:
    working_dir: /app/queryzen-api/
    build:
      context: queryzen-api
      dockerfile: Dockerfile
    ports:
      - '8000:8000'
    volumes:
      - .:/app
    environment:
      CELERY_BROKER_URL: redis://redis:6379/1
    command: >
      bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    healthcheck:
      test: [ "CMD", "wget", "-q0-", "http://localhost:8000/_healthcheck" ]
      interval: 1m
      timeout: 10s
      retries: 2

  workers:
    working_dir: /app/queryzen-api/
    build:
      context: queryzen-api
      dockerfile: Dockerfile
    volumes:
      - .:/app
    environment:
      CELERY_BROKER_URL: redis://redis:6379/1
    command: >
      bash -c "celery -A queryzen_api worker -l INFO"
    healthcheck:
      test: [ "CMD", "poetry", "run", "celery", "-A", "queryzen_api", "status" ]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:7.4
    restart: on-failure
    ports:
      - '6379:6379'
    volumes:
      - ./dev/redis/:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 5s
      retries: 5

  client:
    working_dir: /app
    build:
      context: queryzen-client
      dockerfile: Dockerfile
    volumes:
      - ./queryzen-client:/app
    command: >
      bash -c "tail -f"
    environment:
      - ENVIRONMENT=CI
      - API_URL=http://api:8000
      - CELERY_BROKER_URL=redis://redis:6379/1
    depends_on:
      - redis
      - workers
      - api